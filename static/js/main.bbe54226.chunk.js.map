{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","goods","goodsFromServer","selectedGoods","handleSelect","good","setState","prevState","newSelectedGoods","includes","push","handleRemove","indexOf","splice","getSelectedGoods","length","Error","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCCWA,EAAb,4MACEC,MAAQ,CACNC,MAAM,YAAKC,GACXC,cAAe,CAAC,QAHpB,EAMEC,aAAe,SAACC,GACd,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAgB,YAAOD,EAAUJ,eAEvC,OAAIK,EAAiBC,SAASJ,GACrBE,GAGTC,EAAiBE,KAAKL,GAEf,2BACFE,GADL,IAEEJ,cAAeK,SAlBvB,EAuBEG,aAAe,SAACN,GACd,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAgB,YAAOD,EAAUJ,eAEvC,OAAwC,IAApCK,EAAiBI,QAAQP,GACpBE,GAGTC,EAAiBK,OAAOL,EAAiBI,QAAQP,GAAO,GAEjD,2BAAKE,GAAZ,IAAuBJ,cAAeK,SAjC5C,EAqCEM,iBAAmB,WACjB,IAAQX,EAAkB,EAAKH,MAAvBG,cAER,QAAQ,GACN,KAA8B,IAAzBA,EAAcY,OACjB,MAAO,oBACT,KAA8B,IAAzBZ,EAAcY,OACjB,MAAM,GAAN,OAAUZ,EAAc,GAAxB,gBAEF,KAA8B,IAAzBA,EAAcY,OACjB,MAAM,GAAN,OAAUZ,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBAEF,KAA8B,IAAzBA,EAAcY,OACjB,MAAM,GAAN,OAAUZ,EAAc,GAAxB,aAA+BA,EAAc,GAA7C,gBAAuDA,EAAc,GAArE,iBAEF,KAAKA,EAAcY,OAAS,EAC1B,MAAM,GAAN,OAAUZ,EAAc,GAAxB,aAA+BA,EAAc,GAA7C,4BAEF,QACE,MAAM,IAAIa,MAAM,+BAxDxB,4CA4DE,WAAU,IAAD,OACP,EAAiCC,KAAKjB,MAA9BC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,cAEf,OACE,uBAAMe,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKH,qBAENX,EAAcY,OAAS,GACvB,wBACEI,KAAK,SACLD,UAAU,aACVE,QAAS,kBAAM,EAAKd,SAAS,CAAEH,cAAe,MAHhD,sBAUJ,6BACGF,EAAMoB,KAAI,SAAAhB,GAAI,OACb,qBACEa,UACEI,IAAW,OACT,CAAE,eAAgBnB,EAAcM,SAASJ,KAH/C,UAOGA,GAECF,EAAcM,SAASJ,IACvB,wBACEc,KAAK,SACLD,UAAU,eACVE,QAAS,kBAAM,EAAKhB,aAAaC,IAHnC,oBASDF,EAAcM,SAASJ,IACtB,wBACEc,KAAK,SACLD,UAAU,eACVE,QAAS,kBAAM,EAAKT,aAAaN,IAHnC,sBAfGA,eAvFnB,GAAyBkB,IAAMC,WCR/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bbe54226.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  goods: string[],\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: [...goodsFromServer],\n    selectedGoods: ['Jam'],\n  };\n\n  handleSelect = (good: string) => {\n    this.setState((prevState) => {\n      const newSelectedGoods = [...prevState.selectedGoods];\n\n      if (newSelectedGoods.includes(good)) {\n        return prevState;\n      }\n\n      newSelectedGoods.push(good);\n\n      return {\n        ...prevState,\n        selectedGoods: newSelectedGoods,\n      };\n    });\n  };\n\n  handleRemove = (good: string) => {\n    this.setState((prevState) => {\n      const newSelectedGoods = [...prevState.selectedGoods];\n\n      if (newSelectedGoods.indexOf(good) === -1) {\n        return prevState;\n      }\n\n      newSelectedGoods.splice(newSelectedGoods.indexOf(good), 1);\n\n      return { ...prevState, selectedGoods: newSelectedGoods };\n    });\n  };\n\n  getSelectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (true) {\n      case selectedGoods.length === 0:\n        return 'No goods selected';\n      case selectedGoods.length === 1:\n        return `${selectedGoods[0]} is selected`;\n\n      case selectedGoods.length === 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n\n      case selectedGoods.length === 3:\n        return `${selectedGoods[0]}, ${selectedGoods[1]} and ${selectedGoods[2]} are selected`;\n\n      case selectedGoods.length > 3:\n        return `${selectedGoods[0]}, ${selectedGoods[1]} and others are selected`;\n\n      default:\n        throw new Error('getSelectedGoods() failed');\n    }\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {this.getSelectedGoods()}\n          </h1>\n          {(selectedGoods.length > 0) && (\n            <button\n              type=\"button\"\n              className=\"App__clear\"\n              onClick={() => this.setState({ selectedGoods: [] })}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul>\n          {goods.map(good => (\n            <li\n              className={\n                classNames('Good',\n                  { 'Good--active': selectedGoods.includes(good) })\n              }\n              key={good}\n            >\n              {good}\n\n              {!selectedGoods.includes(good) && (\n                <button\n                  type=\"button\"\n                  className=\"Good__select\"\n                  onClick={() => this.handleSelect(good)}\n                >\n                  Select\n                </button>\n              )}\n\n              {selectedGoods.includes(good) && (\n                <button\n                  type=\"button\"\n                  className=\"Good__remove\"\n                  onClick={() => this.handleRemove(good)}\n                >\n                  Remove\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}